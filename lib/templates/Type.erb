/* generated by rpcoder */

package <%= name_space %>
{
    public class <%= type.name %>
    {
        <%- type.fields.each do |field| -%>
        private var _<%= field.name %>:<%= field.type %>;
        <%- end -%>

        <%- type.fields.each do |field| -%>
        public function get <%= field.name %>():<%= field.type %>
        {
            return _<%= field.name %>;
        }

        <%- end -%>
        public function <%= type.name %>(object:Object = null)
        {
            if (object)
            {
                <%- type.fields.each do |field| -%>
                <%- if field.array? -%>
                _<%= field.name %> = new Array();
                for each(var elem:Object in object['<%= field.name %>'])
                    _<%= field.name %>.push(<%= field.instance_creator(:elem) %>);
                <%- else -%>
                _<%= field.name %> = <%= field.instance_creator(field.name, {:object? => true}) %>;
                <%- end -%>
                <%- end -%>
            }
        }

        public function toString():String
        {
            return [<%= type.fields.map {|i| "_#{i.name}" }.join(', ') %>].join(', ');
        }
    }
}
